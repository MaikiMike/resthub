<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:resthub="http://www.resthub.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.resthub.org/schema/context
    http://www.resthub.org/schema/context/resthub-context-1.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">

	<context:annotation-config />
	<context:component-scan base-package="org.resthub.core" />

	<resthub:include-entities base-package="org.resthub.**.model" />
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="location" value="classpath:resthub.properties" />
    	<property name="ignoreResourceNotFound" value="true" />
    	<property name="ignoreUnresolvablePlaceholders" value="true" />
    	<property name="valueSeparator" value="?" />
	</bean>
        
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${dataSource.driverClassName?org.h2.Driver}"/>
        <property name="url" value="${dataSource.url?jdbc:h2:mem:resthub;DB_CLOSE_DELAY=-1}"/>
        <property name="maxActive" value="${dataSource.maxActive?50}"/>
        <property name="maxWait" value="${dataSource.maxWait?1000}"/>
        <property name="poolPreparedStatements" value="${dataSource.poolPreparedStatements?true}"/>
        <property name="username" value="${dataSource.username?sa}" />
		<property name="password" value="${dataSource.password?}" />
    </bean>
	
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="resthub" />
		<property name="persistenceUnitManager" ref="scanningPersistenceUnitManager" />

		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="${showSql?false}" />
			</bean>
		</property>
		<property name="jpaProperties">
			<map>
				<entry key="hibernate.dialect" value="${hibernate.dialect?org.hibernate.dialect.H2Dialect}" />
				<entry key="hibernate.format_sql" value="${hibernate.format_sql?true}" />
				<entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto?update}" />
				<entry key="hibernate.cache.use_second_level_cache" value="${hibernate.cache.use_second_level_cache?true}"/>
				<entry key="hibernate.cache.provider_class" value="${hibernate.cache.provider_class?net.sf.ehcache.hibernate.SingletonEhCacheProvider}"/>
			</map>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

    <tx:annotation-driven />

	<bean id="scanningPersistenceUnitManager" class="org.resthub.core.context.persistence.ScanningPersistenceUnitManager">
		<property name="defaultDataSource" ref="dataSource" />
		<property name="entityListContextBean" ref="entityListContextBean"/>
	</bean>
	
</beans>
